{"version":3,"sources":["components/Login.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginForm","styled","div","IboxContent","LoginTitle","h2","Login","useState","id","pw","state","setState","onChangeHander","e","target","value","name","Row","Col","md","InputGroup","size","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","type","Button","block","onClick","localStorage","setItem","window","location","href","Container","Root","basename","path","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q2BAOA,IAAMA,EAAYC,IAAOC,IAAV,KAKTC,EAAcF,IAAOC,IAAV,KASXE,EAAaH,IAAOI,GAAV,KA4DDC,EAtDQ,WAAK,IAAD,EACEC,mBAAS,CAC9BC,GAAG,GACHC,GAAG,KAHgB,mBAChBC,EADgB,KACVC,EADU,KAMjBC,EAAgB,SAACC,GAAyC,IAAD,EACtCA,EAAEC,OAAhBC,EADoD,EACpDA,MAAMC,EAD8C,EAC9CA,KAEbL,EAAS,2BACFD,GADC,kBAEHM,EAAMD,MASf,OACE,cAACf,EAAD,UACE,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAChB,EAAD,WACE,cAACC,EAAD,gCACA,sBACA,eAACgB,EAAA,EAAD,CAAYC,KAAK,KAAjB,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,mBAEF,cAACC,EAAA,EAAD,CAAOC,YAAY,KAAKV,KAAK,KAAKW,SAAU,SAAAd,GAAC,OAAGD,EAAeC,SAEjE,sBACA,eAACO,EAAA,EAAD,CAAYC,KAAK,KAAjB,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,mBAEF,cAACC,EAAA,EAAD,CAAOC,YAAY,WAAWV,KAAK,KAAKY,KAAK,WAAWD,SAAU,SAAAd,GAAC,OAAGD,EAAeC,SAEvF,sBACA,cAACgB,EAAA,EAAD,CAAQC,OAAK,EAACC,QAAS,SAAAlB,GAAC,OAxB9BmB,aAAaC,QAAQ,KAAKvB,EAAMF,SAChC0B,OAAOC,SAASC,KAAM,kBAuBhB,6B,uuBC/Dd,IAAMC,EAAWpC,IAAOC,IAAT,KA0CAoC,GAfMrC,IAAOC,IAAT,KAII,kBACrB,cAAC,IAAD,CAAeqC,SAAS,YAAxB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpC,IACjC,cAAC+B,EAAD,WC5BSM,EANmB,WAChC,OACE,cAAC,EAAD,KCKWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.245e2e03.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport {  Button, Col,  FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst LoginForm = styled.div`\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 140px 20px 20px 20px;\r\n`;\r\nconst IboxContent = styled.div`\r\n    background-color: #ffffff;\r\n    color: inherit;\r\n    padding: 15px 20px 20px 20px;\r\n    border-color: #e7eaec;\r\n    border-image: none;\r\n    border-style: solid solid none;\r\n    border-width: 1px 0;\r\n`\r\nconst LoginTitle = styled.h2`\r\n    margin-bottom:30px;\r\n    text-align:center;\r\n`;\r\n\r\n\r\nconst Login:React.FC = ()=>{\r\n    const [state,setState] = useState({\r\n        id:'',\r\n        pw:''\r\n    })\r\n    \r\n    const onChangeHander =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {value,name} = e.target;\r\n        \r\n        setState({\r\n            ...state,\r\n            [name]:value\r\n        })\r\n        \r\n    }\r\n\r\n    const onClickLogin = ()=>{\r\n        localStorage.setItem(\"id\",state.id);\r\n        window.location.href= \"react-ts/main\";\r\n    }\r\n    return(\r\n      <LoginForm>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <IboxContent>\r\n              <LoginTitle>Walkon Management</LoginTitle>\r\n              <p />\r\n              <InputGroup size=\"lg\">\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>ID</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input placeholder=\"id\" name=\"id\" onChange={e=> onChangeHander(e)} />\r\n              </InputGroup>\r\n              <p />\r\n              <InputGroup size=\"lg\">\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>PW</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input placeholder=\"password\" name=\"pw\" type=\"password\" onChange={e=> onChangeHander(e)} />\r\n              </InputGroup>\r\n              <p />\r\n              <Button block onClick={e=>onClickLogin()}>Login</Button>\r\n            </IboxContent>\r\n          </Col>\r\n        </Row>\r\n          \r\n        \r\n        \r\n        \r\n        \r\n      </LoginForm>\r\n    )\r\n}\r\n\r\nexport default Login;","import * as React from 'react';\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Login from '../components/Login';\r\n\r\nconst Container =styled.div`\r\n    /* @media (max-width: 640px) {\r\n        max-width:800px;\r\n        position:relative;\r\n        padding:20px 30px;\r\n        margin:0 auto;\r\n        letter-spacing:-.2px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        max-width:1080px;\r\n        position:relative;\r\n        padding:20px 30px;\r\n        margin:0 auto;\r\n        letter-spacing:-.2px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n        max-width:1800px;\r\n        position:relative;\r\n        padding:20px 30px;  \r\n        margin:0 auto;\r\n        letter-spacing:-.2px;\r\n    } */\r\n    \r\n\r\n`\r\nconst MainContainer =styled.div`\r\n    overflow: hidden;\r\n    min-width: 1190px;\r\n`;\r\nconst Root: React.FC = () => (\r\n  <BrowserRouter basename=\"/react-ts\">\r\n    <Switch>\r\n      {/* <MainContainer> */}\r\n      <Route path=\"/\" exact component={Login} />\r\n      <Container />\r\n      {/* </MainContainer> */}\r\n    </Switch>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default Root;","\nimport React from 'react';\nimport './App.css';\nimport Root from './routes';\n\n\n\nconst App:React.FunctionComponent=()=> {\n  return (\n    <Root />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}